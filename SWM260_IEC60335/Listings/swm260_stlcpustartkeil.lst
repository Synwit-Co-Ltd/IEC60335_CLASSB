


ARM Macro Assembler    Page 1 


    1 00000000                 THUMB
    2 00000000                 REQUIRE8
    3 00000000                 PRESERVE8
    4 00000000         
    5 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
    6 00000000         
    7 00000000         ; Reference to the FailSafe routine to be executed in ca
                       se of non-recoverable failure         
    8 00000000                 IMPORT           FailSafePOR
    9 00000000         
   10 00000000         ; C variables for control flow monitoring
   11 00000000                 IMPORT           CtrlFlowCnt
   12 00000000                 IMPORT           CtrlFlowCntInv
   13 00000000         
   14 00000000         ;*******************************************************
                       ************************
   15 00000000         ; Function Name  : STL_StartUpCPUTest
   16 00000000         ; Description    : Full Cortex-M0 CPU test at start-up
   17 00000000         ;                  Note: when possible, BRANCH are 16-bi
                       t only (depending on
   18 00000000         ;                  relative offset to final BL instructi
                       on)
   19 00000000         ; Input          : None.
   20 00000000         ; Output         : Branch directly to a Fail Safe routin
                       e in case of failure
   21 00000000         ; Return         : TEST_SUCCESSFULL (=1)
   22 00000000         ; WARNING        : all registers destroyed when exiting 
                       this function (including
   23 00000000         ;                  preserved registers R4 to R11) and ex
                       cluding stack point R13)
   24 00000000         ;*******************************************************
                       ************************/
   25 00000000 AAAAAAAA 
                       conAA   DCD              0xAAAAAAAA
   26 00000004 55555555 
                       con55   DCD              0x55555555
   27 00000008 80000000 
                       con80   DCD              0x80000000
   28 0000000C AAAAAAA8 
                       conA8   DCD              0xAAAAAAA8
   29 00000010 55555554 
                       con54   DCD              0x55555554
   30 00000014         
   31 00000014                 EXPORT           conAA
   32 00000014                 EXPORT           con55
   33 00000014         
   34 00000014         
   35 00000014         STL_StartUpCPUTest
                               PROC
   36 00000014                 EXPORT           STL_StartUpCPUTest
   37 00000014         
   38 00000014 B470            PUSH             {R4-R6}     ; Safe critical reg
                                                            isters
   39 00000016         
   40 00000016 2000            MOVS             R0, #0x00
   41 00000018 B2C0            UXTB             R0,R0
   42 0000001A 3000            ADDS             R0,#0       ; Set Z(ero) Flag
   43 0000001C D168            BNE              CPUTestFail ; Fails if Z clear



ARM Macro Assembler    Page 2 


   44 0000001E D467            BMI              CPUTestFail ; Fails if N is set
                                                            
   45 00000020 3801            SUBS             R0,#1       ; Set N(egative) Fl
                                                            ag
   46 00000022 D565            BPL              CPUTestFail ; Fails if N clear
   47 00000024 3002            ADDS             R0,#2       ; Set C(arry) Flag 
                                                            and do not set Z
   48 00000026 D363            BCC              CPUTestFail ; Fails if C clear
   49 00000028 D062            BEQ              CPUTestFail ; Fails if Z is set
                                                            
   50 0000002A D461            BMI              CPUTestFail ; Fails if N is set
                                                            
   51 0000002C         
   52 0000002C 4870            LDR              R0,=con80   ; Prepares Overflow
                                                             test
   53 0000002E 6800            LDR              R0,[R0]
   54 00000030 1800            ADDS             R0, R0, R0  ; Set V(overflow) F
                                                            lag
   55 00000032 D75D            BVC              CPUTestFail ; Fails if V clear
   56 00000034         
   57 00000034         ; This is for control flow test (ENTRY point)
   58 00000034 486F            LDR              R0,=CtrlFlowCnt
   59 00000036         ; Assumes R1 OK; If not, error will be detected by R1 te
                       st and Ctrl flow test later on
   60 00000036 6801            LDR              R1,[R0]
   61 00000038 1CC9            ADDS             R1,R1,#0x3  ; CtrlFlowCnt += Ox
                                                            O3
   62 0000003A 6001            STR              R1,[R0]
   63 0000003C         
   64 0000003C         ; Register R1
   65 0000003C 486E            LDR              R0, =conAA
   66 0000003E 6801            LDR              R1,[R0]
   67 00000040 6800            LDR              R0,[R0]
   68 00000042 4288            CMP              R0,R1
   69 00000044 D154            BNE              CPUTestFail
   70 00000046 486D            LDR              R0, =con55
   71 00000048 6801            LDR              R1,[R0]
   72 0000004A 6800            LDR              R0,[R0]
   73 0000004C 4288            CMP              R0,R1
   74 0000004E D14F            BNE              CPUTestFail
   75 00000050 2101            MOVS             R1, #0x1    ; For ramp test
   76 00000052         
   77 00000052         ; Register R2
   78 00000052 4869            LDR              R0, =conAA
   79 00000054 6802            LDR              R2,[R0]
   80 00000056 6800            LDR              R0,[R0]
   81 00000058 4290            CMP              R0,R2
   82 0000005A D149            BNE              CPUTestFail
   83 0000005C 4867            LDR              R0, =con55
   84 0000005E 6802            LDR              R2,[R0]
   85 00000060 6800            LDR              R0,[R0]
   86 00000062 4290            CMP              R0,R2
   87 00000064 D144            BNE              CPUTestFail
   88 00000066 2202            MOVS             R2, #0x2    ; For ramp test
   89 00000068         
   90 00000068         ; Register R3
   91 00000068 4863            LDR              R0, =conAA
   92 0000006A 6803            LDR              R3,[R0]
   93 0000006C 6800            LDR              R0,[R0]



ARM Macro Assembler    Page 3 


   94 0000006E 4298            CMP              R0,R3
   95 00000070 D13E            BNE              CPUTestFail
   96 00000072 4862            LDR              R0, =con55
   97 00000074 6803            LDR              R3,[R0]
   98 00000076 6800            LDR              R0,[R0]
   99 00000078 4298            CMP              R0,R3
  100 0000007A D139            BNE              CPUTestFail
  101 0000007C 2303            MOVS             R3, #0x3    ; For ramp test
  102 0000007E         
  103 0000007E         ; Register R4
  104 0000007E 485E            LDR              R0, =conAA
  105 00000080 6804            LDR              R4,[R0]
  106 00000082 6800            LDR              R0,[R0]
  107 00000084 42A0            CMP              R0,R4
  108 00000086 D133            BNE              CPUTestFail
  109 00000088 485C            LDR              R0, =con55
  110 0000008A 6804            LDR              R4,[R0]
  111 0000008C 6800            LDR              R0,[R0]
  112 0000008E 42A0            CMP              R0,R4
  113 00000090 D12E            BNE              CPUTestFail
  114 00000092 2404            MOVS             R4, #0x4    ; For ramp test
  115 00000094         
  116 00000094         ; Register R5
  117 00000094 4858            LDR              R0, =conAA
  118 00000096 6805            LDR              R5,[R0]
  119 00000098 6800            LDR              R0,[R0]
  120 0000009A 42A8            CMP              R0,R5
  121 0000009C D128            BNE              CPUTestFail
  122 0000009E 4857            LDR              R0, =con55
  123 000000A0 6805            LDR              R5,[R0]
  124 000000A2 6800            LDR              R0,[R0]
  125 000000A4 42A8            CMP              R0,R5
  126 000000A6 D123            BNE              CPUTestFail
  127 000000A8 2505            MOVS             R5, #0x5    ; For ramp test
  128 000000AA         
  129 000000AA         ; Register R6
  130 000000AA 4853            LDR              R0, =conAA
  131 000000AC 6806            LDR              R6,[R0]
  132 000000AE 6800            LDR              R0,[R0]
  133 000000B0 42B0            CMP              R0,R6
  134 000000B2 D11D            BNE              CPUTestFail
  135 000000B4 4851            LDR              R0, =con55
  136 000000B6 6806            LDR              R6,[R0]
  137 000000B8 6800            LDR              R0,[R0]
  138 000000BA 42B0            CMP              R0,R6
  139 000000BC D118            BNE              CPUTestFail
  140 000000BE 2606            MOVS             R6, #0x6    ; For ramp test
  141 000000C0         
  142 000000C0         ; Register R7
  143 000000C0 484D            LDR              R0, =conAA
  144 000000C2 6807            LDR              R7,[R0]
  145 000000C4 6800            LDR              R0,[R0]
  146 000000C6 42B8            CMP              R0,R7
  147 000000C8 D112            BNE              CPUTestFail
  148 000000CA 484C            LDR              R0, =con55
  149 000000CC 6807            LDR              R7,[R0]
  150 000000CE 6800            LDR              R0,[R0]
  151 000000D0 42B8            CMP              R0,R7
  152 000000D2 D10D            BNE              CPUTestFail



ARM Macro Assembler    Page 4 


  153 000000D4 2707            MOVS             R7, #0x7    ; For ramp test
  154 000000D6         
  155 000000D6         ; Register R8
  156 000000D6 4848            LDR              R0, =conAA
  157 000000D8 6800            LDR              R0,[R0]
  158 000000DA 4680            MOV              R8,R0
  159 000000DC 4540            CMP              R0,R8
  160 000000DE D107            BNE              CPUTestFail
  161 000000E0 4846            LDR              R0, =con55
  162 000000E2 6800            LDR              R0,[R0]
  163 000000E4 4680            MOV              R8,R0
  164 000000E6 4540            CMP              R0,R8
  165 000000E8 D102            BNE              CPUTestFail
  166 000000EA 2008            MOVS             R0, #0x08   ; For ramp test
  167 000000EC 4680            MOV              R8,R0
  168 000000EE         
  169 000000EE E001            BAL              CPUTstCont
  170 000000F0         
  171 000000F0         CPUTestFail
  172 000000F0 F7FF FFFE       BLAL             FailSafePOR
  173 000000F4         
  174 000000F4         CPUTstCont
  175 000000F4         ; Register R9
  176 000000F4 4840            LDR              R0, =conAA
  177 000000F6 6800            LDR              R0,[R0]
  178 000000F8 4681            MOV              R9,R0
  179 000000FA 4548            CMP              R0,R9
  180 000000FC D1F8            BNE              CPUTestFail
  181 000000FE 483F            LDR              R0, =con55
  182 00000100 6800            LDR              R0,[R0]
  183 00000102 4681            MOV              R9,R0
  184 00000104 4548            CMP              R0,R9
  185 00000106 D1F3            BNE              CPUTestFail
  186 00000108 2009            MOVS             R0, #0x09   ; For ramp test
  187 0000010A 4681            MOV              R9,R0
  188 0000010C         
  189 0000010C         ; Register R10
  190 0000010C 483A            LDR              R0, =conAA
  191 0000010E 6800            LDR              R0,[R0]
  192 00000110 4682            MOV              R10,R0
  193 00000112 4550            CMP              R0,R10
  194 00000114 D1EC            BNE              CPUTestFail
  195 00000116 4839            LDR              R0, =con55
  196 00000118 6800            LDR              R0,[R0]
  197 0000011A 4682            MOV              R10,R0
  198 0000011C 4550            CMP              R0,R10
  199 0000011E D1E7            BNE              CPUTestFail
  200 00000120 200A            MOVS             R0, #0x0A   ; For ramp test
  201 00000122 4682            MOV              R10,R0
  202 00000124         
  203 00000124         ; Register R11
  204 00000124 4834            LDR              R0, =conAA
  205 00000126 6800            LDR              R0,[R0]
  206 00000128 4683            MOV              R11,R0
  207 0000012A 4558            CMP              R0,R11
  208 0000012C D1E0            BNE              CPUTestFail
  209 0000012E 4833            LDR              R0, =con55
  210 00000130 6800            LDR              R0,[R0]
  211 00000132 4683            MOV              R11,R0



ARM Macro Assembler    Page 5 


  212 00000134 4558            CMP              R0,R11
  213 00000136 D1DB            BNE              CPUTestFail
  214 00000138 200B            MOVS             R0, #0x0B   ; For ramp test
  215 0000013A 4683            MOV              R11,R0
  216 0000013C         
  217 0000013C         ; Register R12
  218 0000013C 482E            LDR              R0, =conAA
  219 0000013E 6800            LDR              R0,[R0]
  220 00000140 4684            MOV              R12,R0
  221 00000142 4560            CMP              R0,R12
  222 00000144 D1D4            BNE              CPUTestFail
  223 00000146 482D            LDR              R0, =con55
  224 00000148 6800            LDR              R0,[R0]
  225 0000014A 4684            MOV              R12,R0
  226 0000014C 4560            CMP              R0,R12
  227 0000014E D1CF            BNE              CPUTestFail
  228 00000150 200C            MOVS             R0, #0x0C   ; For ramp test
  229 00000152 4684            MOV              R12,R0
  230 00000154 482A            LDR              R0, =CPUTstCont
  231 00000156         
  232 00000156         ; Ramp pattern verification (R0 is not tested)
  233 00000156 2901            CMP              R1, #0x01
  234 00000158 D1CA            BNE              CPUTestFail
  235 0000015A 2A02            CMP              R2, #0x02
  236 0000015C D1C8            BNE              CPUTestFail
  237 0000015E 2B03            CMP              R3, #0x03
  238 00000160 D1C6            BNE              CPUTestFail
  239 00000162 2C04            CMP              R4, #0x04
  240 00000164 D1C4            BNE              CPUTestFail
  241 00000166 2D05            CMP              R5, #0x05
  242 00000168 D1C2            BNE              CPUTestFail
  243 0000016A 2E06            CMP              R6, #0x06
  244 0000016C D1C0            BNE              CPUTestFail
  245 0000016E 2F07            CMP              R7, #0x07
  246 00000170 D1BE            BNE              CPUTestFail
  247 00000172 2008            MOVS             R0, #0x08
  248 00000174 4540            CMP              R0,R8
  249 00000176 D1BB            BNE              CPUTestFail
  250 00000178 2009            MOVS             R0, #0x09
  251 0000017A 4548            CMP              R0,R9
  252 0000017C D1B8            BNE              CPUTestFail
  253 0000017E 200A            MOVS             R0, #0x0A
  254 00000180 4550            CMP              R0,R10
  255 00000182 D1B5            BNE              CPUTestFail
  256 00000184 200B            MOVS             R0, #0x0B
  257 00000186 4558            CMP              R0,R11
  258 00000188 D1B2            BNE              CPUTestFail
  259 0000018A 200C            MOVS             R0, #0x0C
  260 0000018C 4560            CMP              R0,R12
  261 0000018E D1AF            BNE              CPUTestFail
  262 00000190         
  263 00000190         ; Process Stack pointer (banked Register R13)
  264 00000190 F3EF 8009       MRS              R0,PSP      ; Save process stac
                                                            k value
  265 00000194 491B            LDR              R1, =conA8  ; Test is different
                                                             (PSP is word align
                                                            ed, 2 LSB cleared)
  266 00000196 6809            LDR              R1,[R1]
  267 00000198 F381 8809       MSR              PSP,R1      ; load process stac



ARM Macro Assembler    Page 6 


                                                            k value
  268 0000019C F3EF 8209       MRS              R2,PSP      ; Get back process 
                                                            stack value
  269 000001A0 428A            CMP              R2,R1       ; Verify value
  270 000001A2 D1A5            BNE              CPUTestFail
  271 000001A4 4918            LDR              R1, =con54  ; Test is different
                                                             (PSP is word align
                                                            ed, 2 LSB cleared)
  272 000001A6 6809            LDR              R1,[R1]
  273 000001A8 F381 8809       MSR              PSP,R1      ; load process stac
                                                            k value
  274 000001AC F3EF 8209       MRS              R2,PSP      ; Get back process 
                                                            stack value
  275 000001B0 428A            CMP              R2,R1       ; Verify value
  276 000001B2 D19D            BNE              CPUTestFail
  277 000001B4 F380 8809       MSR              PSP, R0     ; Restore process s
                                                            tack value
  278 000001B8         
  279 000001B8         ; Stack pointer (Register R13)
  280 000001B8 F3EF 8008       MRS              R0,MSP      ; Save stack pointe
                                                            r value
  281 000001BC 4911            LDR              R1, =conA8  ; Test is different
                                                             (SP is word aligne
                                                            d, 2 LSB cleared)
  282 000001BE 6809            LDR              R1,[R1]
  283 000001C0 F381 8808       MSR              MSP,R1      ; load SP value
  284 000001C4 F3EF 8208       MRS              R2,MSP      ; Get back SP value
                                                            
  285 000001C8 428A            CMP              R2,R1       ; Verify value
  286 000001CA D191            BNE              CPUTestFail
  287 000001CC 490E            LDR              R1, =con54
  288 000001CE 6809            LDR              R1,[R1]     ; load SP value
  289 000001D0 F381 8808       MSR              MSP,R1      ; Get back SP value
                                                            
  290 000001D4 F3EF 8208       MRS              R2,MSP      ; Verify value
  291 000001D8 428A            CMP              R2,R1
  292 000001DA D189            BNE              CPUTestFail
  293 000001DC F380 8808       MSR              MSP,R0      ; Restore stack poi
                                                            nter value
  294 000001E0         
  295 000001E0         ; Link register R14 cannot be tested an error should be 
                       detected by Ctrl flow test later
  296 000001E0         
  297 000001E0         ; Control flow test (EXIT point)
  298 000001E0 480A            LDR              R0,=CtrlFlowCntInv
  299 000001E2 6801            LDR              R1,[R0]
  300 000001E4 1EC9            SUBS             R1,R1,#0x3  ; CtrlFlowCntInv -=
                                                             OxO3
  301 000001E6 6001            STR              R1,[R0]
  302 000001E8         
  303 000001E8 BC70            POP              {R4-R6}     ; Restore critical 
                                                            registers
  304 000001EA         
  305 000001EA         ; If next instruction is not executed, R0 will hold a va
                       lue different from 0
  306 000001EA 2001            MOVS             R0, #0x1    ; CPUTEST_SUCCESS
  307 000001EC 4770            BX               LR          ; return to the cal
                                                            ler
  308 000001EE         



ARM Macro Assembler    Page 7 


  309 000001EE 00 00           ALIGN
  310 000001F0         
  311 000001F0                 ENDP
  312 000001F0         
  313 000001F0                 END
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0 --apcs=interw
ork --depend=.\objects\swm260_stlcpustartkeil.d -o.\objects\swm260_stlcpustartk
eil.o -I.\CSL\SWM260_StdPeriph_Driver -I.\CSL\CMSIS\CoreSupport -I.\CSL\CMSIS\D
eviceSupport -I.\SelfTestLib -IC:\Users\zhangtn\AppData\Local\Arm\Packs\Synwit\
SWM32_DFP\2.0.5\CSL\SWM260\CMSIS\DeviceSupport --predefine="__EVAL SETA 1" --pr
edefine="__UVISION_VERSION SETA 536" --list=.\listings\swm260_stlcpustartkeil.l
st SelfTestLib\SWM260_STLcpustartKEIL.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 5 in file SelfTestLib\SWM260_STLcpustartKEIL.s
   Uses
      None
Comment: .text unused
CPUTestFail 000000F0

Symbol: CPUTestFail
   Definitions
      At line 171 in file SelfTestLib\SWM260_STLcpustartKEIL.s
   Uses
      At line 43 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 44 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 46 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 48 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 49 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 50 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 55 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 69 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 74 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 82 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 87 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 95 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 100 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 108 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 113 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 121 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 126 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 134 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 139 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 147 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 152 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 160 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 165 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 180 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 185 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 194 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 199 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 208 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 213 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 222 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 227 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 234 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 236 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 238 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 240 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 242 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 244 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 246 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 249 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 252 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 255 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 258 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 261 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 270 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 276 in file SelfTestLib\SWM260_STLcpustartKEIL.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 286 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 292 in file SelfTestLib\SWM260_STLcpustartKEIL.s

CPUTstCont 000000F4

Symbol: CPUTstCont
   Definitions
      At line 174 in file SelfTestLib\SWM260_STLcpustartKEIL.s
   Uses
      At line 169 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 230 in file SelfTestLib\SWM260_STLcpustartKEIL.s

STL_StartUpCPUTest 00000014

Symbol: STL_StartUpCPUTest
   Definitions
      At line 35 in file SelfTestLib\SWM260_STLcpustartKEIL.s
   Uses
      At line 36 in file SelfTestLib\SWM260_STLcpustartKEIL.s
Comment: STL_StartUpCPUTest used once
con54 00000010

Symbol: con54
   Definitions
      At line 29 in file SelfTestLib\SWM260_STLcpustartKEIL.s
   Uses
      At line 271 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 287 in file SelfTestLib\SWM260_STLcpustartKEIL.s

con55 00000004

Symbol: con55
   Definitions
      At line 26 in file SelfTestLib\SWM260_STLcpustartKEIL.s
   Uses
      At line 32 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 70 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 83 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 96 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 109 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 122 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 135 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 148 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 161 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 181 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 195 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 209 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 223 in file SelfTestLib\SWM260_STLcpustartKEIL.s

con80 00000008

Symbol: con80
   Definitions
      At line 27 in file SelfTestLib\SWM260_STLcpustartKEIL.s
   Uses
      At line 52 in file SelfTestLib\SWM260_STLcpustartKEIL.s
Comment: con80 used once
conA8 0000000C




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Symbol: conA8
   Definitions
      At line 28 in file SelfTestLib\SWM260_STLcpustartKEIL.s
   Uses
      At line 265 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 281 in file SelfTestLib\SWM260_STLcpustartKEIL.s

conAA 00000000

Symbol: conAA
   Definitions
      At line 25 in file SelfTestLib\SWM260_STLcpustartKEIL.s
   Uses
      At line 31 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 65 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 78 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 91 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 104 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 117 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 130 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 143 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 156 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 176 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 190 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 204 in file SelfTestLib\SWM260_STLcpustartKEIL.s
      At line 218 in file SelfTestLib\SWM260_STLcpustartKEIL.s

9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

CtrlFlowCnt 00000000

Symbol: CtrlFlowCnt
   Definitions
      At line 11 in file SelfTestLib\SWM260_STLcpustartKEIL.s
   Uses
      At line 58 in file SelfTestLib\SWM260_STLcpustartKEIL.s
Comment: CtrlFlowCnt used once
CtrlFlowCntInv 00000000

Symbol: CtrlFlowCntInv
   Definitions
      At line 12 in file SelfTestLib\SWM260_STLcpustartKEIL.s
   Uses
      At line 298 in file SelfTestLib\SWM260_STLcpustartKEIL.s
Comment: CtrlFlowCntInv used once
FailSafePOR 00000000

Symbol: FailSafePOR
   Definitions
      At line 8 in file SelfTestLib\SWM260_STLcpustartKEIL.s
   Uses
      At line 172 in file SelfTestLib\SWM260_STLcpustartKEIL.s
Comment: FailSafePOR used once
3 symbols
346 symbols in table
